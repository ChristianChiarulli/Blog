{"version":3,"sources":["webpack:///./src/components/pager.jsx","webpack:///./src/components/post.jsx","webpack:///./src/templates/tag-template.jsx","webpack:///./utils/Utilities.js","webpack:///./src/components/post.module.less"],"names":["Pager","pageContext","previousPagePath","nextPagePath","style","float","paddingBottom","paddingTop","to","Post","title","author","date","body","slug","tags","fluid","className","card","key","post","cover","alt","content","postTags","map","tag","slugify","badge","Tags","data","posts","allMarkdownRemark","edges","console","log","textAlign","marginTop","color","node","frontmatter","excerpt","fields","image","childImageSharp","module","exports","text","toString","toLowerCase","replace"],"mappings":"4FAAA,iDA8BeA,IA1BD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACPC,EAAmCD,EAAnCC,iBAAkBC,EAAiBF,EAAjBE,aAE1B,OACE,6BACGD,GACC,kBAAC,OAAD,CACEE,MAAO,CAAEC,MAAO,OAAQC,cAAe,QAASC,WAAY,QAC5DC,GAAIN,GAEJ,kBAAC,IAAD,MAJF,QAIuB,KAIxBC,GACC,kBAAC,OAAD,CACEC,MAAO,CAAEC,MAAO,QAASC,cAAe,QAASC,WAAY,QAC7DC,GAAIL,GAFN,QAIO,kBAAC,IAAD,U,kCCvBf,2FAqCeM,IA9BF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACrD,OACE,yBAAKC,UAAWb,IAAMc,MACpB,yBAAKC,IAAKT,EAAOO,UAAWb,IAAMgB,MAChC,yBAAKH,UAAWb,IAAMiB,OACpB,kBAAC,OAAD,CAAMb,GAAIM,EAAMK,IAAKL,GACnB,kBAAC,IAAD,CAAKE,MAAOA,EAAON,MAAOG,EAAMS,IAAKZ,MAGzC,kBAAC,OAAD,CAAMF,GAAIM,EAAMK,IAAKL,GACnB,yBAAKG,UAAWb,IAAMmB,SACpB,4BAAKb,GACL,sCAAYC,EAAZ,MACCC,EAAO,+BAAQA,GAAgB,KAChC,2BAAIC,GACJ,wBAAII,UAAWb,IAAMoB,UAClBT,EAAKU,KAAI,SAAAC,GAAG,OACX,4BACE,kBAAC,OAAD,CAAMlB,GAAE,IAAMmB,kBAAQD,IACpB,yBAAKT,UAAWb,IAAMwB,OAAQF,e,kCC1BlD,oEA+BeG,UAzBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAM7B,EAAkB,EAAlBA,YACd8B,EAAQD,EAAKE,kBAAkBC,MACrCC,QAAQC,IAAIJ,GAF0B,IAG9BL,EAAQzB,EAARyB,IACR,OACE,kBAAC,IAAD,KACE,wBAAItB,MAAO,CAAEgC,UAAW,SAAUC,UAAW,SAA7C,UACS,0BAAMjC,MAAO,CAAEkC,MAAO,YAAcZ,IAE5CK,EAAMN,KAAI,gBAAGc,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACE7B,MAAO6B,EAAKC,YAAY9B,MACxBC,OAAQ4B,EAAKC,YAAY7B,OACzBC,KAAM2B,EAAKC,YAAY5B,KACvBC,KAAM0B,EAAKE,QACX3B,KAAMyB,EAAKG,OAAO5B,KAClBC,KAAMwB,EAAKC,YAAYzB,KACvBC,MAAOuB,EAAKC,YAAYG,MAAMC,gBAAgB5B,WAGlD,kBAAC,IAAD,CAAOf,YAAaA,O,mBCf1B4C,EAAOC,QAAU,CAAEnB,QAXH,SAAUoB,GACxB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,qBCPpBL,EAAOC,QAAU,CAAC,UAAY,gCAAgC,KAAO,2BAA2B,MAAQ,4BAA4B,QAAU,8BAA8B,MAAQ,4BAA4B,KAAO,2BAA2B,SAAW,+BAA+B,MAAQ","file":"component---src-templates-tag-template-jsx-3482834b5233d19948c1.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { FaArrowRight, FaArrowLeft } from \"react-icons/fa\"\n\nconst Pager = ({ pageContext }) => {\n  const { previousPagePath, nextPagePath } = pageContext\n\n  return (\n    <div>\n      {previousPagePath && (\n        <Link\n          style={{ float: \"left\", paddingBottom: \"100px\", paddingTop: \"30px\" }}\n          to={previousPagePath}\n        >\n          <FaArrowLeft /> Prev{\" \"}\n        </Link>\n      )}\n\n      {nextPagePath && (\n        <Link\n          style={{ float: \"right\", paddingBottom: \"100px\", paddingTop: \"30px\" }}\n          to={nextPagePath}\n        >\n          Next <FaArrowRight />\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default Pager\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Img from \"gatsby-image\"\nimport style from \"./post.module.less\"\nimport { slugify } from \"../../utils/Utilities\"\n\nconst Post = ({ title, author, date, body, slug, tags, fluid }) => {\n  return (\n    <div className={style.card}>\n      <div key={title} className={style.post}>\n        <div className={style.cover}>\n          <Link to={slug} key={slug}>\n            <Img fluid={fluid} title={body} alt={title} />\n          </Link>\n        </div>\n        <Link to={slug} key={slug}>\n          <div className={style.content}>\n            <h2>{title}</h2>\n            <label>by: {author}, </label>\n            {date ? <label>{date}</label> : null}\n            <p>{body}</p>\n            <ul className={style.postTags}>\n              {tags.map(tag => (\n                <li>\n                  <Link to={`/${slugify(tag)}`}>\n                    <div className={style.badge}>{tag}</div>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Link>\n      </div>\n    </div>\n  )\n}\nexport default Post\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Pager from \"../components/pager\"\nimport Post from \"../components/post\"\n\nconst Tags = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges\n  console.log(posts)\n  const { tag } = pageContext\n  return (\n    <Layout>\n      <h1 style={{ textAlign: \"center\", marginTop: \"80px\" }}>\n        Topic: <span style={{ color: \"#61afef\" }}>{tag}</span>\n      </h1>\n      {posts.map(({ node }) => (\n        <Post\n          title={node.frontmatter.title}\n          author={node.frontmatter.author}\n          date={node.frontmatter.date}\n          body={node.excerpt}\n          slug={node.fields.slug}\n          tags={node.frontmatter.tags}\n          fluid={node.frontmatter.image.childImageSharp.fluid}\n        />\n      ))}\n      <Pager pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const TagListQuery = graphql`\n  query TagListQuery($skip: Int!, $limit: Int!, $tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { eq: $tag } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 100)\n          frontmatter {\n            author\n            date(formatString: \"MMMM Do YYYY\")\n            title\n            tags\n            image {\n              childImageSharp {\n                resize(width: 100, height: 200) {\n                  src\n                }\n                fluid(maxWidth: 286) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const slugify = function (text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\") // Trim - from end of text\n}\n\nmodule.exports = { slugify }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-module--container--1GqoF\",\"post\":\"post-module--post--3YYTK\",\"cover\":\"post-module--cover--1sFCY\",\"content\":\"post-module--content--2AklI\",\"badge\":\"post-module--badge--3Xj_m\",\"card\":\"post-module--card--2tdNb\",\"postTags\":\"post-module--postTags--1TEhm\",\"space\":\"post-module--space--1AOZh\"};"],"sourceRoot":""}